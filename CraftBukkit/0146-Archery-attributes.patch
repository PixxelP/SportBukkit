From 78a3f04a1ccde712d6c4e113a93af873bc757427 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 2 Apr 2016 21:57:42 -0400
Subject: [PATCH] Archery attributes


diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 1019f98..c023cce 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -72,13 +72,23 @@ public abstract class EntityArrow extends Entity implements IProjectile {
         float f6 = -MathHelper.sin(f * 0.017453292F);
         float f7 = MathHelper.cos(f1 * 0.017453292F) * MathHelper.cos(f * 0.017453292F);
 
+        // SportBukkit start - use attributes
+        final double velocityTransfer;
+        if(entity instanceof EntityLiving) {
+            final EntityLiving entityLiving = (EntityLiving) entity;
+            f4 = (float) entityLiving.getAttributeInstance(EntityLiving.ARROW_ACCURACY).getValue();
+            velocityTransfer = entityLiving.getAttributeInstance(EntityLiving.ARROW_VELOCITY_TRANSFER).getValue();
+        } else {
+            velocityTransfer = 1;
+        }
+
         this.shoot((double) f5, (double) f6, (double) f7, f3, f4);
-        this.motX += entity.motX;
-        this.motZ += entity.motZ;
+        this.motX += entity.motX * velocityTransfer;
+        this.motZ += entity.motZ * velocityTransfer;
         if (!entity.onGround) {
-            this.motY += entity.motY;
+            this.motY += entity.motY * velocityTransfer;
         }
-
+        // SportBukkit end
     }
 
     public void shoot(double d0, double d1, double d2, float f, float f1) {
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 2795be7..1cb8fb0 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -36,6 +36,11 @@ import org.bukkit.craftbukkit.entity.CraftLivingEntity;
 
 public abstract class EntityLiving extends Entity {
 
+    // SportBukkit start - add archery attributes
+    public static final IAttribute ARROW_ACCURACY = new AttributeRanged(null, "sportbukkit.arrowAccuracy", 1, 0, Double.MAX_VALUE);
+    public static final IAttribute ARROW_VELOCITY_TRANSFER = new AttributeRanged(null, "sportbukkit.arrowVelocityTransfer", 1, Double.MIN_VALUE, Double.MAX_VALUE);
+    // SportBukkit end
+
     private static final UUID a = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
     private static final AttributeModifier b = (new AttributeModifier(EntityLiving.a, "Sprinting speed boost", 0.30000001192092896D, 2)).a(false);
     protected static final DataWatcherObject<Byte> au = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.a);
@@ -148,6 +153,10 @@ public abstract class EntityLiving extends Entity {
         this.getAttributeMap().b(GenericAttributes.MOVEMENT_SPEED);
         this.getAttributeMap().b(GenericAttributes.g);
         this.getAttributeMap().b(GenericAttributes.h);
+        // SportBukkit start - init our attributes
+        this.getAttributeMap().b(ARROW_ACCURACY);
+        this.getAttributeMap().b(ARROW_VELOCITY_TRANSFER);
+        // SportBukkit end
     }
 
     protected void a(double d0, boolean flag, IBlockData iblockdata, BlockPosition blockposition) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
index d34a938..8b95c88 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
@@ -46,6 +46,8 @@ public final class CraftItemFactory implements ItemFactory {
             .add("generic.luck")
             .add("horse.jumpStrength")
             .add("zombie.spawnReinforcements")
+            .add("sportbukkit.arrowAccuracy")
+            .add("sportbukkit.arrowVelocityTransfer")
             .build();
     }
 
-- 
1.9.0

