From 772bc817cb344bbc092d31a3ce77c54ef6a18340 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sun, 26 Jun 2016 01:57:17 -0400
Subject: [PATCH] Item cooldown API


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 49e9ae4..8c1f9a4 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1923,6 +1923,7 @@ public abstract class EntityHuman extends EntityLiving {
         this.clientTicksSinceLastAttack = 0; // SportBukkit
     }
 
+    public ItemCooldown getItemCooldown() { return df(); } // SportBukkit - method alias
     public ItemCooldown df() {
         return this.bW;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 6c65ad1..26af066 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -2015,4 +2015,14 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public int getProtocolVersion() {
         return getHandle().protocolVersion;
     }
+
+    @Override
+    public void startItemCooldown(Material item, int ticks) {
+        getHandle().getItemCooldown().a(CraftMagicNumbers.getItem(item), ticks);
+    }
+
+    @Override
+    public float getRemainingItemCooldown(Material item) {
+        return getHandle().getItemCooldown().a(CraftMagicNumbers.getItem(item), 0F);
+    }
 }
-- 
1.9.0

