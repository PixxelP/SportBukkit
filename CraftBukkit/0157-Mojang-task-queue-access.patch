From f6408e940fec4a048998e392ce189cae3808a437 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Fri, 5 Aug 2016 10:46:15 -0400
Subject: [PATCH] Mojang task queue access


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index bc2733d..8d02abf 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -706,11 +706,25 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
         this.methodProfiler.a("jobs");
         Queue queue = this.j;
 
+        // SportBukkit start - don't lock the task queue while running tasks
+        for(;;) {
+            final FutureTask<?> task;
+            synchronized(this.j) {
+                task = this.j.poll();
+            }
+            if(task == null) {
+                break;
+            } else {
+                SystemUtils.a(task, MinecraftServer.LOGGER);
+            }
+        }
+        /* SportBukkit end
         synchronized (this.j) {
             while (!this.j.isEmpty()) {
                 SystemUtils.a((FutureTask) this.j.poll(), MinecraftServer.LOGGER);
             }
         }
+        SportBukkit */
 
         this.methodProfiler.c("levels");
 
@@ -1462,6 +1476,20 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
         return Thread.currentThread() == this.serverThread;
     }
 
+    // SportBukkit start
+    public void addMainThreadTask(boolean priority, Runnable task) {
+        synchronized(this.j) {
+            final FutureTask<?> futureTask = ListenableFutureTask.create(task, null);
+            final java.util.Deque<FutureTask<?>> deque = (java.util.Deque<FutureTask<?>>) this.j;
+            if(priority) {
+                deque.addFirst(futureTask);
+            } else {
+                deque.addLast(futureTask);
+            }
+        }
+    }
+    // SportBukkit end
+
     public int aF() {
         return 256;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index de72c5a..a344ef4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -92,6 +92,7 @@ import org.bukkit.inventory.ShapedRecipe;
 import org.bukkit.inventory.ShapelessRecipe;
 import org.bukkit.permissions.Permissible;
 import org.bukkit.permissions.Permission;
+import org.bukkit.plugin.IllegalPluginAccessException;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.PluginLoadOrder;
 import org.bukkit.plugin.PluginManager;
@@ -1825,4 +1826,44 @@ public final class CraftServer extends CraftBukkitRuntime implements Server {
     public Set<Integer> getProtocolVersions() {
         return ImmutableSet.of(107, 108, 109, 110, 201, 202, 203, 204, 205, 210);
     }
+
+    @Override
+    public void postToMainThread(Plugin plugin, boolean priority, Runnable task) {
+        getHandle().getServer().addMainThreadTask(priority, wrapTask(plugin, task));
+    }
+
+    @Override
+    public boolean runOnMainThread(Plugin plugin, boolean priority, Runnable task) {
+        task = wrapTask(plugin, task);
+
+        if(getHandle().getServer().isMainThread()) {
+            task.run();
+            return true;
+        } else {
+            postToMainThread(plugin, priority, task);
+            return false;
+        }
+    }
+
+    private Runnable wrapTask(final Plugin plugin, final Runnable task) {
+        if(!plugin.isEnabled()) {
+            throw new IllegalPluginAccessException("Plugin attempted to register task while disabled");
+        }
+
+        class Wrapped implements Runnable {
+            @Override public void run() {
+                try {
+                    task.run();
+                } catch(Throwable throwable) {
+                    plugin.getLogger().log(
+                        Level.SEVERE,
+                        "Exception running task from plugin " + plugin.getDescription().getFullName(),
+                        throwable
+                    );
+                }
+            }
+        }
+
+        return task instanceof Wrapped ? task : new Wrapped();
+    }
 }
-- 
1.9.0

