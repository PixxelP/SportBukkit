From d78e9422a9e42a7d0037ab9a55c60b78cbdf9a66 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 25 Aug 2015 05:30:20 -0400
Subject: [PATCH] Dynamic port allocation


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 9976d4c..0441607 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -173,6 +173,11 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
 
             try {
                 this.am().a(inetaddress, this.P());
+                // SportBukkit start
+                if(this.getServerConnection().getPort() != this.getConfiguredPort()) {
+                    DedicatedServer.LOGGER.info("Bound to port " + this.getServerConnection().getPort());
+                }
+                // SportBukkit end
             } catch (IOException ioexception) {
                 DedicatedServer.LOGGER.warn("**** FAILED TO BIND TO PORT!");
                 DedicatedServer.LOGGER.warn("The exception was: {}", new Object[] { ioexception.toString()});
@@ -442,9 +447,15 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
         return this.getServerIp();
     }
 
+    // SportBukkit start - return dynamic port, if set, otherwise configured port
     public int e_() {
-        return this.P();
+        if(this.getServerConnection().getPort() != 0) {
+            return this.getServerConnection().getPort();
+        } else {
+            return this.getConfiguredPort();
+        }
     }
+    // SportBukkit end
 
     public String f_() {
         return this.getMotd();
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 25e5f67..ec7f570 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1079,6 +1079,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
         return this.H;
     }
 
+    public int getConfiguredPort() { return this.P(); } // SportBukkit - alias for following method
     public int P() {
         return this.u;
     }
@@ -1301,6 +1302,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
 
     }
 
+    public ServerConnection getServerConnection() { return this.am(); } // SportBukkit - alias for following method
     public ServerConnection am() {
         return this.p;
     }
diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index fb9dbed..7106985 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -64,6 +64,11 @@ public class ServerConnection {
     private final List<NetworkManager> h = Collections.synchronizedList(Lists.<NetworkManager>newArrayList());
     // SportBukkit end
 
+    // SportBukkit start
+    private int port;
+    public int getPort() { return port; }
+    // SportBukkit end
+
     public ServerConnection(MinecraftServer minecraftserver) {
         this.f = minecraftserver;
         this.d = true;
@@ -102,6 +107,8 @@ public class ServerConnection {
                     networkmanager.setPacketListener(new HandshakeListener(ServerConnection.this.f, networkmanager));
                 }
             }).group((EventLoopGroup) lazyinitvar.c()).localAddress(inetaddress, i)).bind().syncUninterruptibly());
+
+            this.port = ((java.net.InetSocketAddress) this.g.get(0).channel().localAddress()).getPort(); // SportBukkit
         }
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index beb934d..14bf88e 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -511,12 +511,28 @@ public final class CraftServer implements Server {
 
     // NOTE: These are dependent on the corresponding call in MinecraftServer
     // so if that changes this will need to as well
+
     @Override
-    public int getPort() {
+    public int getConfiguredPort() {
         return this.getConfigInt("server-port", 25565);
     }
 
     @Override
+    public int getBoundPort() {
+        return getHandle().getServer().getServerConnection().getPort();
+    }
+
+    @Override
+    public int getPort() {
+        int port = getBoundPort();
+        if(port > 0) {
+            return port;
+        } else {
+            return getConfiguredPort();
+        }
+    }
+
+    @Override
     public int getViewDistance() {
         return this.getConfigInt("view-distance", 10);
     }
-- 
1.9.0

